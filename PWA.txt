using System;
using System.Xml;

namespace xmlr
{
    public partial class WebForm1 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }

        protected void Button1_Click(object sender, EventArgs e)
        {
           XmlReader re = XmlReader.Create(@"C:\Users\DELL\Documents\XML.xml");
           while(re.Read())
            {
                if(re.NodeType.Equals(XmlNodeType.Element))
                {
                    String s = Label1.Text + "";
                    Label1.Text = s + re.Name;
                }
            }
            re.Close();
        }

        protected void Button2_Click(object sender, EventArgs e)
        {
            XmlWriterSettings rw = new XmlWriterSettings();
            rw.Indent = true;
            XmlWriter wr = XmlWriter.Create(@"C:\Users\DELL\Documents\XML.xml", rw);
            wr.WriteStartDocument();
            wr.WriteComment("Example of Writer in XML");
            wr.WriteStartElement("Student");
            wr.WriteEndElement();
        }
    }
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace dbsr
{
    public partial class WebForm1 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }

        protected void TextBox1_TextChanged(object sender, EventArgs e)
        {

        }

        protected void Button1_Click(object sender, EventArgs e)
        {
            string con = ConfigurationManager.ConnectionStrings["con"].ConnectionString;
            SqlConnection conn = new SqlConnection(con);
            String inserQuery = "(inert into timepass values(@name,@phno))";
            SqlCommand sc= new SqlCommand(inserQuery, conn);
            sc.Parameters.AddWithValue("@name", TextBox1.Text);
            sc.Parameters.AddWithValue("@name", TextBox2.Text);
            conn.Open();

            sc.ExecuteNonQuery();

            conn.Close();
        }

        protected void Button2_Click(object sender, EventArgs e)
        {
            string con = ConfigurationManager.ConnectionStrings["con"].ConnectionString;
            SqlConnection conn = new SqlConnection(con);
            SqlCommand sc = new SqlCommand("select * from timepass", conn);
            conn.Open();
            SqlDataReader sdr = sc.ExecuteReader();
            Label1.Text = " " + sdr;
            
        }
    }
}
----
[i] Fibonacci Series 
using System; 
namespace ConsoleApplication3 
{ 
class Program 
{ 
static void Main(string[] args) 
{ 
int num1=0,num2=1,num3,num4,num,counter; 
Console.Write ("Upto how many number you want fibonacci series:"); 
num=int.Parse(Console.ReadLine()); 
counter=3; 
Console.Write(num1+"\t"+num2); 
while(counter<=num) 
{ 
num3 = num1 + num2; 
if (counter >= num) 
 
break; 
Console.Write("\t" + num3); 
num1 = num2; 
num2 = num3; 
counter++; 
} 
Page 9 of 91 
} 
} 
} 
 
 
1)D)[i]OUTPUT: 
Upto how many number you want fibonacci series:5 
0 1 1 2 3 
 
-------------------------------------------------------------------------------------------------------- 
[ii] Test for prime numbers. 
CODE: 
using System; 
namespace testprime 
{ 
class Program 
{ 
static void Main(string[] args) 
{ 
int num, counter; 
Console.Write("Enter number:"); 
num = int.Parse(Console.ReadLine()); 
for (counter = 2; counter <= num / 2; counter++) 
{ 
if ((num % counter) == 0) 
Page 10 of 91 
break; 
} 
if (num == 1) 
Console.WriteLine(num + "is neither prime nor composite"); 
else if(counter<(num/2)) 
Console.WriteLine(num+"is not prime number"); 
else 
Console.WriteLine(num+"is prime number"); 
} 
} 
}
-
--------------------------------
using System; using System.Collections.Generic; using System.Linq; using System.Text; 
 
namespace CurrencyConversion { class Program { static void Main(string[] args) { int choice; Console.WriteLine(&quot;Enter your Choice :\n 1- Dollar to Rupee \n 2- Euro to Rupee \n 3- Malaysian Ringgit to Rupee &quot;); choice = int.Parse(Console.ReadLine()); switch (choice) { case 1: Double dollar, rupee, val; Console.WriteLine(&quot;Enter the Dollar Amount :&quot;); dollar = Double.Parse(Console.ReadLine()); Console.WriteLine(&quot;Enter the Dollar Value :&quot;); val = double.Parse(Console.ReadLine()); rupee = dollar * val; 
 
Console.WriteLine(&quot;{0} Dollar Equals {1} Rupees&quot;, dollar, rupee); break; case 2: Double Euro, rupe, valu; Console.WriteLine(&quot;Enter the Euro Amount :&quot;); Euro = Double.Parse(Console.ReadLine()); 
Page 17 of 91 
Console.WriteLine(&quot;Enter the Euro Value :&quot;); valu = double.Parse(Console.ReadLine()); rupe = Euro * valu; Console.WriteLine(&quot;{0} Euro Equals {1} Rupees&quot;, Euro, rupe); break; case 3: Double ringit, rup, value; Console.WriteLine(&quot;Enter the Ringgit Amount :&quot;); ringit = Double.Parse(Console.ReadLine()); Console.WriteLine(&quot;Enter the Ringgit Value :&quot;); value = double.Parse(Console.ReadLine()); rup = ringit * value; Console.WriteLine(&quot;{0} Malaysian Ringgit Equals {1} Rupees&quot;, ringit, rup); break; } Console.ReadLine(); } } } 
-------------
[ii](b) Multiple inheritance 
 
CODE: Gross.cs using System; namespace MultipleInheritance { interface Gross { int ta { get; set; } int da { get; set; } int GrossSal(); } } Employee.cs using System; namespace MultipleInheritance { class Employee { string name; public Employee(string name) { this.name = name; } public int BasicSal(int basicSal) { return basicSal; } public void ShowData() { Console.WriteLine("Name : " + name); } } } 
Page 27 of 91 
Salary.cs using System; namespace MultipleInheritance { class Salary:employee,Gross { int hra; public Salary(string name, int hra):base(name) { this.hra = hra; } public int ta { get {return S_ta; } set { S_ta = value; } } private int S_ta; public int da { get { return S_da; } set { S_da = value; } } private int S_da; public int GrossSal() { int gSal; gSal = hra + ta + da + BasicSal(15000); return gSal; } public void dispSal() { base.ShowData(); Console.WriteLine("Gross Sal : " + GrossSal()); } } } Program.cs using System; namespace MultipleInheritance { class Program 
Page 28 of 91 
{ static void Main(string[] args) { Salary s = new Salary("Prachit", 35000); s.da = 20000; s.ta = 30000; s.dispSal(); } } } 
------------------